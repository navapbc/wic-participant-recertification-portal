name: 🧪 CI - Participant Portal
on:
  push:
    branches:
      - main
      - dev
  pull_request: {}

jobs:
  lint:
    name: ⬣ ESLint
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false
          working-directory: ./participant_portal

      - name: 🔬 Lint
        run: pwd
      - run: ls -l .
      - run: ls -l participant_portal
      - run: npm --prefix participant_portal run lint

  typecheck:
    name:  ʦ Typecheck
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false
          working-directory: ./participant_portal

      - name: 🔎 Type check
        run: npm --prefix participant_portal  run typecheck --if-present

  jest:
    name: ⚡ jest
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false
          working-directory: ./participant_portal

      - name: ⚡ Run jest
        run: npm  --prefix participant_portal run test -- --coverage

  playwright:
    name: 🎭 Playwright
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false
          working-directory: ./participant_portal

      - name: 🖨 Copy the Darwin screenshots as Linux (faking it until we make it)
        run: find participant_portal/e2e -name "*.png" -exec bash -c 'cp "$0" "${0/darwin/linux}"' {} \;

      - name: ❓ Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./participant_portal/package-lock.json').dependencies['@playwright/test'].version)")" >> $GITHUB_ENV

      - name: 🔒 Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - name: 🎭 Install Playwright browsers
        run: npx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - name: 🐳 Run Playwright in Docker Compose
        run: npx playwright test --retries=3
        working-directory: participant_portal
