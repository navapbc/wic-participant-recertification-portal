name: Deploy

on:
  workflow_dispatch:
    inputs:
      env_name:
        description: "The environment to deploy to"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - staging
          - prod
      app_name:
        description: "The app to deploy"
        required: true
        default: "participant_portal"
        type: choice
        options:
          - participant_portal
          - staff_portal
          - analytics
  # Designate this as a reusable workflow.
  # When used as a reusable workflow, this always deploys to the dev environment.
  # See https://docs.github.com/en/actions/using-workflows/reusing-workflows
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string

env:
  ENV_NAME: ${{ inputs.env_name || 'dev' }}
  APP_NAME: ${{ inputs.app_name || 'participant_portal' }}

# Need to repeat the expression since env.WHATEVER is not accessible in this context
concurrency: cd-${{ inputs.env_name || 'dev' }}-${{ inputs.app_name || 'participant_portal' }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: Build release
        run: make release-build APP_NAME=$APP_NAME

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          # !! Update the role-to-assume with the GitHub actions role ARN
          role-to-assume: arn:aws:iam::636249768232:role/wic-prp-github-actions
          aws-region: us-west-2

      - name: Publish release
        run: make release-publish APP_NAME=$APP_NAME

      - name: Prepare for release by gathering outputs to pass to aws-actions steps
        id: prepare-release
        run: make prepare-release ENV_NAME=$ENV_NAME APP_NAME=$APP_NAME >> $GITHUB_OUTPUT

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: render-task-definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ steps.prepare-release.outputs.ecs_task_definition }}
          container-name: ${{ steps.prepare-release.container_name }}
          image: ${{ steps.prepare-release.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-task-definition.outputs.task-definition }}
          service: ${{ steps.prepare-release.outputs.service_name }}
          cluster: ${{ steps.prepare-release.outputs.cluster_name }}
          wait-for-service-stability: true
