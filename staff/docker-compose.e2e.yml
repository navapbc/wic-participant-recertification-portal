# Usage:
# This docker composition is meant to be invoked using the npm scripts in package.json.
# Run `npm run e2e` to create the database, then lowdefy, then run the playwright tests.
# Run `npm run e2e:cleanup` to clean up running and exited containers.
# Run `npm run e2e:update` to update the playwright linux snapshots.
#
# Advanced usage:
# Run `docker-compose up -d --build` to start up all the services
# Run `docker-compose exec playwright npx playwright test` to run tests
# Run `docker-compose down -v --remove-orphans` to cleanup
# Note: This usage *requires* running docker-compose down; otherwise containers are
#       will hang around forever. Not suitable for CI.
version: "3.7"

services:
  # Create a database to run e2e tests against
  database-e2e:
    image: postgres
    environment:
      POSTGRES_PASSWORD: incredible_local_secret_phrase
      POSTGRES_USER: postgres
    # Check that the database is up and running
    healthcheck:
      test: "pg_isready --username=postgres"
      timeout: 5s
      retries: 20
    networks:
      - staff-e2e

  # Create a lowdefy server to run e2e tests against
  app-e2e:
    build:
      target: dev
      context: .
    # The database must be up and running before the lowdefy server will start
    depends_on:
      database-e2e:
        condition: service_healthy
    environment:
      LOWDEFY_SECRET_PG_CONNECTION_STRING: postgresql://postgres:incredible_local_secret_phrase@database-e2e:5432/postgres?schema=public
    # Check that the lowdefy server is up and running
    healthcheck:
      test: "curl -f http://localhost:3000 || exit 1"
      timeout: 5s
      retries: 20
    init: true
    networks:
      - staff-e2e
    # Expose a port in case it's useful for debugging
    ports:
      - 3123:3000

  # Create the playwright container
  playwright:
    build:
      # Use a different Dockerfile specifically to build a slim container just for playwright
      context: ../participant
      dockerfile: ../participant/Dockerfile.playwright
    # lowdefy must be up and running before playwright will start
    depends_on:
      app-e2e:
        condition: service_healthy
    init: true
    networks:
      - staff-e2e
    # Bind mount some local directories to make working on e2e tests faster
    # and to be able to update snapshots
    volumes:
      - ./e2e:/srv/e2e
      - ./playwright-report:/srv/playwright-report
      - ./test-results:/srv/test-results

networks:
  staff-e2e:
