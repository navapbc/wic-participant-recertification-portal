version: "3.7"

services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_PASSWORD: incredible_local_secret_phrase
      POSTGRES_USER: postgres
    healthcheck:
      test: "pg_isready --username=postgres"
      timeout: 10s
      retries: 20
    init: true
    volumes:
      - postgres_data:/var/lib/postgresql/data

  lowdefy_dev:
    build:
      target: dev
      context: .
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      LOWDEFY_SECRET_PG_CONNECTION_STRING: postgresql://postgres:incredible_local_secret_phrase@postgres:5432/postgres?schema=public
    init: true
    ports:
      - "3033:3000"
    volumes:
      # Mount the local directory for faster local development.
      - ./:/home/node/lowdefy
      # Use a named volume for the node_modules so that the container uses the guest machine's node_modules dir instead of the host machine's node_modules directory, which might be divergent.
      - lowdefy_dev_nodemodules:/home/node/lowdefy/node_modules

  # Include a remix container to set the db schema and seed the db.
  # Run the following to re-seed:
  # `docker compose run --rm remix`
  remix:
    build:
      target: dev
      context: ../participant
    command: ["npm", "run", "dev:dbseed"]
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:incredible_local_secret_phrase@postgres:5432/postgres?schema=public
    init: true
    ports:
      - "3053:3000"
    volumes:
      - ./prisma/seed.ts:/home/node/remix/prisma/seed.ts:ro

  # lowdefy_prod:
  #   build:
  #     target: prod
  #     context: .
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   environment:
  #     LOWDEFY_SECRET_PG_CONNECTION_STRING: postgresql://postgres:incredible_local_secret_phrase@postgres:5432/postgres?schema=public
  #   init: true
  #   ports:
  #     - "3333:3000"
  #   read_only: true

volumes:
  lowdefy_dev_nodemodules:
  postgres_data:
